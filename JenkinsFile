pipeline {
    agent any

    environment {
        AZURE_SERVICE_PRINCIPAL_ID = Client ID
        AZURE_SERVICE_PRINCIPAL_SECRET = Client Secret
        AZURE_TENANT_ID = Tenant ID
        AZURE_SUBSCRIPTION_ID = Subscription ID

    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    // Azure CLI login using service principal credentials and specifying subscription
                    sh "az login --service-principal -u ${AZURE_SERVICE_PRINCIPAL_ID} -p ${AZURE_SERVICE_PRINCIPAL_SECRET} --tenant ${AZURE_TENANT_ID}"
                    sh "az account set --subscription ${AZURE_SUBSCRIPTION_ID}"
                    
                    // Go to the directory where Terraform files are checked out
                    dir('path_to_your_terraform_directory') {
                        // Initialize Terraform
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Validate') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Validate Terraform configuration
                        sh 'terraform validate'
                    }
                }
            }
        }

        stage('Format') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Format Terraform files
                        sh 'terraform fmt -check=true'
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Generate Terraform plan
                        sh 'terraform plan -out=tfplan'
                    }
                }
            }
        }

        stage('Apply') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Apply Terraform plan
                        sh 'terraform apply -auto-approve tfplan'
                    }
                }
            }
        }
    }

    post {
        always {
            // Cleanup steps or notifications can be added here
            echo 'Pipeline execution completed.'
        }
    }
}
