pipeline {
    agent any

    environment {
        AZURE_SERVICE_PRINCIPAL_ID = 046b6aad-8d6f-480e-9fbc-6b9fdbb9b869
        AZURE_SERVICE_PRINCIPAL_SECRET = ulo8Q~QhM8XZyDFDzoRxVgAtoHXCMMYim2gZ6ccy
        AZURE_TENANT_ID = 7ee12db0-ba7e-40c4-8543-2c3c0e8ae7d6
        AZURE_SUBSCRIPTION_ID = ec49dde3-01ff-476f-992d-5460ebb26e8d

    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    // Azure CLI login using service principal credentials and specifying subscription
                    sh "az login --service-principal -u ${AZURE_SERVICE_PRINCIPAL_ID} -p ${AZURE_SERVICE_PRINCIPAL_SECRET} --tenant ${AZURE_TENANT_ID}"
                    sh "az account set --subscription ${AZURE_SUBSCRIPTION_ID}"
                    
                    // Go to the directory where Terraform files are checked out
                    dir('path_to_your_terraform_directory') {
                        // Initialize Terraform
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Validate') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Validate Terraform configuration
                        sh 'terraform validate'
                    }
                }
            }
        }

        stage('Format') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Format Terraform files
                        sh 'terraform fmt -check=true'
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Generate Terraform plan
                        sh 'terraform plan -out=tfplan'
                    }
                }
            }
        }

        stage('Apply') {
            steps {
                script {
                    dir('path_to_your_terraform_directory') {
                        // Apply Terraform plan
                        sh 'terraform apply -auto-approve tfplan'
                    }
                }
            }
        }
    }

    post {
        always {
            // Cleanup steps or notifications can be added here
            echo 'Pipeline execution completed.'
        }
    }
}
